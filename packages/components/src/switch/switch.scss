@use "@lumino/theme/tokens/color";
@use "@lumino/theme/tokens/corner";
@use "@lumino/theme/tokens/opacity";
@use "@lumino/theme/theme/media";
@use "@lumino/theme/theme/transition";

.switch {
    --switch-track-width: 52px;
    --switch-track-height: 32px;
    --switch-handle-size: 40px;
    --switch-handle-space: calc((var(--switch-track-height) - var(--switch-handle-size)) / 2);
    position: relative;
    min-height: var(--switch-handle-size);
    display: flex;
    contain: layout;
    column-gap: 8px;
    align-items: center;
    user-select: none;
}

.switch:not(.switch--disabled) {
    --switch-label-color: #{color.get-varname("primary")};
    --switch-track-outline-color: #{color.get-varname("primary")};
    cursor: pointer;
}

.switch:not(.switch--checked):not(.switch--disabled) {
    --switch-track-color: #{color.get-varname("surface")};
    --switch-handle-color: #{color.get-varname("primary")};
}

.switch:not(.switch--checked) {
    --switch-handle-scale: 0.75;
    --switch-handle-translate: var(--switch-handle-space);
}

.switch--checked:not(.switch--disabled) {
    --switch-track-color: #{color.get-varname("primary")};
    --switch-handle-color: #{color.get-varname("on-primary")};
}

.switch--checked {
    --switch-handle-scale: 1;
    --switch-handle-translate: calc((var(--switch-track-width) - var(--switch-handle-size)) - var(--switch-handle-space));
}

.switch--disabled {
    --switch-label-color: #{color.get-varname("disabled")};
    --switch-track-outline-color: #{color.get-varname("disabled")};
    cursor: not-allowed;
}

.switch--disabled.switch--checked {
    --switch-track-color: #{color.get-varname("disabled")};
    --switch-handle-color: #{color.get-varname("surface")};
}

.switch--disabled:not(.switch--checked) {
    --switch-track-color: #{color.get-varname("surface")};
    --switch-handle-color: #{color.get-varname("disabled")};
}

.switch:hover:not(.switch--disabled):not(.switch--focused) .switch__handle::before {
    --switch-layer-opacity: #{opacity.get-fallback("hover")};
}

.switch--focused:hover .switch__handle::before {
    --switch-layer-opacity: #{opacity.get-fallback("focus")};
}

.switch--focused:not(:hover) .switch__handle::before {
    --switch-layer-opacity: #{opacity.get-fallback("pressed")};
}

.switch__control {
    position: relative;
    width: var(--switch-track-width);
    height: var(--switch-track-height);
    display: inline-flex;
    flex: none;
    color: color.get-varname("primary");
    align-items: center;
    justify-content: center;
    border-radius: corner.get-fallback("extra-large");
}

.switch__native {
    position: absolute;
    width: 100%;
    height: 100%;
    top: 0;
    left: 0;
    margin: 0;
    opacity: 0;
    cursor: inherit;
}

.switch__track {
    width: var(--switch-track-width);
    height: var(--switch-track-height);
    flex: none;
    display: flex;
    align-items: center;
    border-radius: corner.get-fallback("extra-large");
    background-color: var(--switch-track-color);

    @include media.prefers-motion() {
        transition: transition.linear("background-color");
    }

    &::after {
        position: absolute;
        width: 100%;
        height: 100%;
        top: 0;
        left: 0;
        content: "";
        border-width: 1px;
        border-style: solid;
        border-color: var(--switch-track-outline-color);
        border-radius: inherit;
        pointer-events: none;

        @include media.prefers-motion() {
            transition: transition.linear("border-color");
        }
    }
}

.switch__handle {
    width: var(--switch-handle-size);
    height: var(--switch-handle-size);
    flex: none;
    display: flex;
    align-items: center;
    justify-content: center;
    border-radius: corner.get-fallback("full");
    transform: translateX(var(--switch-handle-translate));

    @include media.prefers-motion() {
        transition: transition.linear("background-color"), transition.linear("transform");
    }

    &::before,
    &::after {
        position: absolute;
        content: "";
        border-radius: inherit;
        pointer-events: none;
    }

    &::before {
        width: 100%;
        height: 100%;
        opacity: var(--switch-layer-opacity, 0);
        background-color: var(--switch-layer-color, currentColor);
        z-index: 1;

        @include media.prefers-motion() {
            transition: transition.linear("opacity"), transition.linear("background-color");
        }
    }

    &::after {
        width: calc(var(--switch-handle-size) - 16px);
        height: calc(var(--switch-handle-size) - 16px);
        border-radius: inherit;
        background-color: var(--switch-handle-color);
        transform: scale(var(--switch-handle-scale));

        @include media.prefers-motion() {
            transition: transition.linear("background-color"), transition.linear("transform");
        }
    }

    .ripple__container {
        z-index: 1;
    }
}

.switch__label {
    min-height: var(--switch-track-height);
    flex: 1;
    color: var(--switch-label-color);
    cursor: inherit;
}
