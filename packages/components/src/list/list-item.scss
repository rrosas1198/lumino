@use "@lumino/theme/theme/media";
@use "@lumino/theme/theme/transition";
@use "@lumino/theme/theme/typography";
@use "@lumino/theme/tokens/color";
@use "@lumino/theme/tokens/corner";
@use "@lumino/theme/tokens/opacity";

.list-item {
    --list-item-size: 48px;
    --list-item-space-with-slots: 18px;
    --list-item-space-without-slots: 28px;
    position: relative;
    min-block-size: var(--list-item-size);
    max-inline-size: 100%;
    display: flex;
    column-gap: 8px;
    padding-block: 8px;
    align-items: center;
    justify-content: center;
    outline: none;
    border: none;
    flex: none;
    text-decoration: none;
    border-radius: corner.get-fallback("full");
    background-color: var(--list-item-background-color);
    appearance: none;

    @include media.prefers-motion() {
        transition: transition.linear("background-color");
    }

    &::before {
        position: absolute;
        inline-size: 100%;
        block-size: 100%;
        inset-block-start: 0;
        inset-inline-start: 0;
        content: "";
        opacity: var(--list-item-layer-opacity, 0);
        border-radius: inherit;
        background-color: var(--list-item-layer-color, transparent);
        pointer-events: none;
        z-index: 1;

        @include media.prefers-motion() {
            transition: transition.linear("background-color"), transition.linear("opacity");
        }
    }

    &:focus {
        --list-item-layer-opacity: #{opacity.get-fallback("focus")};
    }

    &:active:not(:focus) {
        --list-item-layer-opacity: #{opacity.get-fallback("pressed")};
    }

    &:hover:not(:active):not(:focus) {
        --list-item-layer-opacity: #{opacity.get-fallback("hover")};
    }

    &:not(:has(.list-item__prepend)) {
        padding-inline-start: var(--list-item-space-without-slots);
    }

    &:not(:has(.list-item__append)) {
        padding-inline-end: var(--list-item-space-without-slots);
    }

    &:has(.list-item__prepend) {
        padding-inline-start: var(--list-item-space-with-slots);
    }

    &:has(.list-item__append) {
        padding-inline-end: var(--list-item-space-with-slots);
    }
}

.list-item.list-item--interactive:not(.list-item--disabled) {
    user-select: none;
    cursor: pointer;
}

.list-item.list-item--disabled {
    cursor: not-allowed;
}

.list-item__prepend,
.list-item__append {
    display: inline-flex;
    align-items: center;
    justify-content: center;

    @include media.prefers-motion() {
        transition: transition.linear("color");
    }
}

.list-item__prepend {
    color: var(--list-item-prepend-color);
}

.list-item__content {
    flex: auto;
    color: var(--list-item-content-color);
    text-align: start;
}

.list-item__append {
    color: var(--list-item-append-color);
}

.list-item .ripple__container {
    z-index: 1;
}

.list-item__title {
    display: block;
    @include typography.typescale("body-large");
}

.list-item__heading {
    display: block;
    @include typography.typescale("label-small");
}

.list-item__subtitle {
    display: block;
    @include typography.typescale("body-small");
}

.list-item.list-item--interactive:not(.list-item--selected):not(.list-item--disabled) {
    --list-item-layer-color: #{color.get-varname("primary")};
    --list-item-append-color: #{color.get-varname("primary")};
    --list-item-prepend-color: #{color.get-varname("primary")};
    --list-item-content-color: #{color.get-varname("on-surface-variant")};
    --list-item-background-color: transparent;
}

.list-item.list-item--interactive.list-item--disabled {
    --list-item-append-color: #{color.get-varname("disabled")};
    --list-item-prepend-color: #{color.get-varname("disabled")};
    --list-item-content-color: #{color.get-varname("disabled")};
    --list-item-background-color: transparent;
}

.list-item.list-item--interactive.list-item--selected:not(.list-item--disabled) {
    --list-item-layer-color: #{color.get-varname("primary")};
    --list-item-append-color: #{color.get-varname("primary")};
    --list-item-prepend-color: #{color.get-varname("primary")};
    --list-item-content-color: #{color.get-varname("on-primary-container")};
    --list-item-background-color: #{color.get-varname("primary-container")};
}
